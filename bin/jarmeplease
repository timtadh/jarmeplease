#!/usr/bin/env python
# -*- coding: utf-8 -*-
#Author: Tim Henderson
#Email: tadh@case.edu
#Copyright (C) 2012 All Rights Reserved
#For licensing see the LICENSE file in the top level directory.

# stdlib imports
import sys, os
from getopt import getopt, GetoptError

import jarmeplease
from conf import get_conf

__version__ = 'git master'

error_codes = {
    'usage':1,
    'file_not_found':2,
    'option':3,
    'args':4,
    'version':5,
}

usage_message = \
'''usage: jarmeplease'''

extended_message = \
'''
Options

    -h, help                            print this message
    -v, version                         print the version
'''

def log(*msgs):
    for msg in msgs:
        print >>sys.stderr, msg,
    print >>sys.stderr
    sys.stderr.flush()
_log = log

def output(*msgs):
    for msg in msgs:
        sys.stdout.write(msg)
        sys.stdout.write(' ')
    sys.stdout.write('\n')
    sys.stdout.flush()

def version():
    '''Print version and exits'''
    log('version :', __version__)
    sys.exit(error_codes['version'])

def usage(code=None):
    '''Prints the usage and exits with an error code specified by code. If code
    is not given it exits with error_codes['usage']'''
    log(usage_message)
    if code is None:
        log(extended_message)
        code = error_codes['usage']
    sys.exit(code)

def main(args):
    ''' Kicks off the application.  '''

    short_opts =  'hv'
    long_opts = [
      'help', 'version',
    ]

    try:
        opts, args = getopt(args, short_opts, long_opts)
    except GetoptError, err:
        logger.error(err)
        usage(error_codes['option'])

    default = 'jarall'
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage()
        elif opt in ('-v', '--version'):
            version()

    if len(args) == 0:
        args.append(default)

    try:
        conf = get_conf()
    except RuntimeError, e:
        log(e.message)
        usage(error_codes['option'])

    for cmd in args:
        jarmeplease.commands[cmd](conf)


if __name__ == '__main__':
    main(sys.argv[1:])

